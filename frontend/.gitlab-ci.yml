stages:
  - build
  # - test  // Commented out for now, but can be uncommented to include the test stage
  - deploy

before_script:
  - export AWS_ACCESS_KEY=${AWS_ACCESS_KEY_ID}
  - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
  - export AWS_DEFAULT_REGION="ap-south-1"  # Set the AWS region to ap-south-1
  # Fetch the reCAPTCHA key from AWS Parameter Store
  - export RECAPTCHA_KEY=$(aws ssm get-parameter --name test-recaptcha-key --with-decryption --query "Parameter.Value" --output text)
  # Check if the RECAPTCHA_KEY is empty
  - if [ -z "$RECAPTCHA_KEY" ]; then echo "Failed to fetch reCAPTCHA key"; exit 1; fi
  - sed -i "s|^REACT_APP_RECAPTCHA_KEY=.*|REACT_APP_RECAPTCHA_KEY=${RECAPTCHA_KEY}|" .env

# unit test:
#   image: node:latest
#   stage: test
#   before_script:
#     - npm install
#   script:
#     - npm run test
#   coverage: /All files[^|]*\|[^|]*\s+([\d\.]+)/
#   artifacts:
#     paths:
#       - coverage/
#     when: always
#     reports:
#       junit:
#         - junit.xml

build artifact:
  stage: build
  image: node:latest
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
  before_script:
    - npm install
  script:
    - npm run build 
  artifacts:
    paths:
      - build/
    when: always

deploy s3:
  stage: deploy
  image:
    name: amazon/aws-cli:latest
    entrypoint: 
      - '/usr/bin/env'
  script:
    # Update the map file with the fetched value
    # - ./script.sh "$RECAPTCHA_KEY"
    - aws s3 sync build/ s3://test.mark-associates.com/ --delete --cache-control "max-age=31536000"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main"'
      when: always